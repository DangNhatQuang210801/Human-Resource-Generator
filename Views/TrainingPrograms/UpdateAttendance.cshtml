@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Human_Resource_Generator.ViewModels.AttendanceViewModels.EditAttendanceViewModel

@{
    ViewData["Title"] = "Update Attendance";
}

<h1>Update Attendance</h1>

<div>
    <h4>Training Program</h4>
    <p id="error-message" class="text-danger"></p>
    <hr />
    <dl class="row">
        <div class="row">
            <dt class="col-sm-2">
                Attendance Date
            </dt>
            <dd class="col-sm-4">
                <input type="date" class="attendanceDate" >
            </dd>
        </div>
        <dt class="col-sm-2">
            Name
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            Description
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            Teacher
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Teacher)
        </dd>
    </dl>
    <hr />
    <div class="row">
        <div class="col-md-8">
            <h4>List joined employee </h4>
        </div>
        <div class="col-md-4 text-end">
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Code
                </th>
                <th>
                    Name
                </th>
                <th>
                    Is Attended
                    <button onclick="StartScan()" class="button-scanner"><i class="bi bi-upc-scan"></i></button>
                </th>
                <th>
                    Score
                </th>
                <th>
                    Status
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.JoinedEmployees)
            {
                <tr>
                    <td>
                        @item.Code
                    </td>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        <input class="form-check-input check-item-employee" type="checkbox" code="@item.Code" value="@item.Id" @(item.AttendanceEmployees.Count > 0 ? "checked" : "")>
                    </td>
                    <td>
                        <input class="form-control score-input" type="number" id="score-@item.Id" value="@(item.AttendanceEmployees.FirstOrDefault()?.Score?? 0)" @(item.AttendanceEmployees.Count > 0 ? "" : "disabled")>
                    </td>
                    <td>
                        <span id="status-@item.Id"></span>
                    </td>
                </tr>
            }
            @if (Model.JoinedEmployees.Count == 0)
            {
                <tr class="text-center">
                    <td colspan="4">
                        <i>There are no employees involved</i>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div>
    <input type="button" value="Update" id="submit" class="btn btn-primary" />
    <a href="#" onclick="ConfirmDelete(@Model.Attendance.Id)" class="btn btn-primary btn-danger">Delete</a>
    <button type="button" style="margin-left:5px" class="btn btn-info" id="btn-search-employee" onclick="ImportAttendance()">Import</button>
    <a asp-action="Attendance" asp-route-id="@Model.Id">Back to List</a>
</div>

<div class="modal fade" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Attendance</h5>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to Remove this Attendance?</p>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn" data-dismiss="modal" onclick="CloseModal()">Cancel</a>
                <a href="#" class="btn btn-primary" onclick="DeleteEmployee()">Confirm</a>
            </div>
        </div>
    </div>
</div>
   @*hidden field for storing current employeeId*@
<input type="hidden" id="hiddenAttendanceId" />

<div class="modal fade" id="modalScanner">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Scan Attendance</h5>
            </div>
            <div class="modal-body">
                <textarea rows="10" style="width: 100%" class="listCode"></textarea>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn" data-dismiss="modal" onclick="CloseModal()">Cancel</a>
                <a href="#" class="btn btn-primary" onclick="FinishScan()">Save</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="myModalImport">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Import Employee</h5>
            </div>
            <div class="modal-body">
                <input type="file" name="file" id="inputFile"/>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn" data-dismiss="modal" onclick="CloseModalImport()">Cancel</a>
                <a href="#" class="btn btn-primary" onclick="UploadTraining()">Upload</a>
            </div>
        </div>
    </div>
</div>
<style>
    .button-scanner{
        outline: none;
        border: none;
        border-radius: 5px;
        transition: 0.3s ease;
    }
    .button-scanner:hover{
        background-color: #868e96;
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            //set default attendance date
             var date = new Date(Date.parse("@Model.Attendance.AttendanceDate.ToString("yyyy/MM/dd")"));
             const yyyy = date.getFullYear();
             let mm = date.getMonth() + 1; // Months start at 0!
             let dd = date.getDate();
             
             if (dd < 10) dd = '0' + dd;
             if (mm < 10) mm = '0' + mm;
             
             const formattedToday = yyyy + '-' + mm + '-' + dd;
             $(".attendanceDate").val(formattedToday)
            
            $(".score-input").each(function () {
                let thisId = $(this).attr("id").slice(6,);
                console.log(thisValue);
                if (thisValue >= 70) {
                    $("#status-" + thisId).text("Pass");
                    $("#status-" + thisId).addClass("text-success");
                    $("#status-" + thisId).removeClass("text-danger");
                } else {
                    $("#status-" + thisId).text("Fail");
                    $("#status-" + thisId).addClass("text-danger");
                    $("#status-" + thisId).removeClass("text-success");
                }
            })
        })
        
        var StartScan = function () {
            $("#modalScanner").modal("show");
        }
        
        var FinishScan = function () {
            var listCode = $(".listCode").val().split("\n");
            $('input:checkbox.check-item-employee').each(function () {
                           if (listCode.includes($(this).attr("code"))){
                               $(this).prop('checked', true);
                           }
                           let thisId = $(this).val();
                           if (this.checked) {
                                $("#score-" + thisId).prop('disabled', false);
                           } else {
                                $("#score-" + thisId).prop('disabled', true);
                           }
                        });
            
            $(".listCode").val = "";
            $("#modalScanner").modal("hide");
        }
        var ConfirmDelete = function (attendanceId) {
                                        $("#hiddenAttendanceId").val(attendanceId);
                                        $("#myModal").modal('show');
                                    }
                                    
        var DeleteEmployee = function () {
             var attendanceId = $("#hiddenAttendanceId").val();
            $.ajax({
                type: "POST",
                url: "/TrainingPrograms/DeleteAttendance",
                data: { Id: attendanceId, ProgramId:@Model.Id },
                success: function (result) {
                    $("#myModal").modal("hide");
                    $("#row_" + attendanceId).remove();
                    if (result.statusCode == 200) {
                        window.location.href = result.redirectToUrl;
                    }
                    
                }
            })
                        }
        var CloseModal = function () {
             $("#myModal").modal('hide');
             $("#modalScanner").modal('hide');
        }

        $(".check-item-employee").change(function () {
            let thisId = $(this).val();
            if (this.checked) {
                $("#score-" + thisId).prop('disabled', false);
            } else {
                $("#score-" + thisId).prop('disabled', true);
            }
        })

        $(".score-input").change(function () {
            let thisId = $(this).attr("id").slice(6,);
            let thisValue = $(this).val();
            if (thisValue > 50) {
                $("#status-" + thisId).text("Pass");
                $("#status-" + thisId).addClass("text-success");
                $("#status-" + thisId).removeClass("text-danger");
            } else {
                $("#status-" + thisId).text("Fail");
                $("#status-" + thisId).addClass("text-danger");
                $("#status-" + thisId).removeClass("text-success");
            }
        })

        $("#submit").click(function () {
            let URLAction = '@Url.Action("UpdateAttendance", "TrainingPrograms")';
            let attendanceDate = $(".attendanceDate").val();
            let trainingProgramId = @Model.Id;
            let attendanceId = @Model.Attendance.Id;
            let listEmployeeIdWithScore = [];
            $('input:checkbox.check-item-employee').each(function () {
                if (this.checked) {
                    listEmployeeIdWithScore.push({
                        "employeeId": $(this).val(),
                        "score": $("#score-" + $(this).val()).val()
                    });
                }
            });

            if (listEmployeeIdWithScore.length == -1) {
                $("#error-message").text("Please select at least 1 employee to participate");
                return;
            }
            $.ajax({
                url: URLAction,
                type: 'POST',
                data: { Id: attendanceId, TrainingProgramId: trainingProgramId, AttendanceDate: attendanceDate, ListEmployeeIdWithScore: JSON.stringify(listEmployeeIdWithScore) },
                success: function (response) {
                    if (response.statusCode != 200) {
                        $("#error-message").text(response.message);
                    } else {
                        window.location.href = response.redirectToUrl;
                    }

                }
            });
        })
        var ImportAttendance = function () {
                             $("#myModalImport").modal('show');
                        }
                                        
        var UploadTraining = function () {
                            var formData = new FormData();
                            formData.append("file", $("#inputFile")[0].files[0]);
                            $.ajax({
                                  url: "/TrainingPrograms/ImportAttendance",
                                  type: "POST",
                                  data: formData,
                                  processData: false,
                                  contentType: false,
                                  success: function (response) {
                                      $("tr#row").each(function (){
                                          var $this = $(this);
                                          var code = $this.find('td#code').text().trim();
                                          var checked = $this.find('input#check');
                                          var score = $this.find('input.score-input');
                                          for (var i = 0; i <response.length; i++) {
                                              let rcode = response[i].split(":")[0];
                                              let rscore = response[i].split(":")[1];
                                              if (code === rcode){
                                                    checked.prop( "checked", true );
                                                    score.val(rscore);
                                                    let thisId = score.attr("id").slice(6,);
                                                    let thisValue = rscore;
                                                    if (thisValue > 69 && thisValue < 100) {
                                                         $("#status-" + thisId).text("Pass");
                                                         $("#status-" + thisId).addClass("text-success");
                                                         $("#status-" + thisId).removeClass("text-danger");
                                                    } else {
                                                         $("#status-" + thisId).text("Fail");
                                                         $("#status-" + thisId).addClass("text-danger");
                                                         $("#status-" + thisId).removeClass("text-success");
                                                    }
                                                    break;
                                              }
                                          }
                                          
                                      });
                                  },
                                  error: function (xhr, status, error) {
                                      alert(response.responseText);
                                  }
                            });
                            
                            $("#myModalImport").modal('hide');              
                        }
                        var CloseModalImport = function () {
                            $("#myModalImport").modal('hide');
                        }
    </script>
}

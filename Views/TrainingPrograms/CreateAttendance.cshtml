@model Human_Resource_Generator.ViewModels.TrainingProgramViewModel.DetailTrainingProgramViewModel

@{
    ViewData["Title"] = "New Attendance";
}

<h1>New Attendance</h1>

<div>
    <h4>Training Program</h4>
    <p id="error-message" class="text-danger"></p>
    <hr />
    <dl class="row">
        <div class="row">
            <dt class="col-sm-2">
                Date*
            </dt>
            <dd class="col-sm-4">
                <input class="form-control" id="attendance-date-input" type="date" required/>
            </dd>
        </div>
        <dt class="col-sm-2">
            Name
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            Description
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            Teacher
        </dt>
        <dd class="col-sm-10">
            <span style="white-space: pre-line">@Model.Teacher</span>
        </dd>
        <dt class="col-sm-2">
            Created At
        </dt>
        <dd class="col-sm-10">
            @Model.CreatedAt.ToShortDateString()
        </dd>
    </dl>
    <div>
        <input type="button" value="Create" id="submit" class="btn btn-primary" />
        <button type="button" style="margin-left:5px" class="btn btn-info" id="btn-search-employee" onclick="ImportAttendance()">Import</button>
        <a asp-action="Attendance" class="btn btn-info" asp-route-id="@Model.Id">Back to List</a>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-8">
            <h4>List joined employee </h4>
        </div>
        <div class="col-md-4 text-end">
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Code
                </th>
                <th>
                    Name
                </th>
                <th>
                    Is Attended
                </th>
                <th>
                    Score
                </th>
                <th>
                    Status
                </th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.JoinedEmployees)
            {
                <tr id="row">
                    <td id="code">
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td id="name">
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        <input class="form-check-input check-item-employee" id="check" type="checkbox" value="@item.Id">
                    </td>
                    <td>
                        <input class="form-control score-input" type="number" id="score-@item.Id" value="0" disabled>
                    </td>
                    <td>
                        <span id="status-@item.Id"></span>
                    </td>
                </tr>
            }
            @if (Model.JoinedEmployees.Count == 0)
            {
                <tr class="text-center">
                    <td colspan="4">
                        <i>There are no employees involved</i>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div>
    <input type="button" value="Create" id="submit" class="btn btn-primary" />
    <button type="button" style="margin-left:5px" class="btn btn-info" id="btn-search-employee" onclick="ImportAttendance()">Import</button>
    <a asp-action="Attendance" asp-route-id="@Model.Id">Back to List</a>
</div>

<div class="modal fade" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Import Employee</h5>
            </div>
            <div class="modal-body">
                <input type="file" name="file" id="inputFile"/>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn" data-dismiss="modal" onclick="CloseModal()">Cancel</a>
                <a href="#" class="btn btn-primary" onclick="UploadTraining()">Upload</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(".check-item-employee").change(function(){
            let thisId = $(this).val();
            if (this.checked) {
                $("#score-" + thisId).prop('disabled', false);
            }else{
                $("#score-" + thisId).prop('disabled', true);
            }
        })

        $(".score-input").change(function () {
            let thisId = $(this).attr("id").slice(6);
            let thisValue = $(this).val();

            if (thisValue === "#N/A") {
                thisValue = 0; // Convert #N/A to 0
            } else {
                thisValue = parseFloat(thisValue); // Convert input value to a number
            }

            if (isNaN(thisValue)) {
                $("#status-" + thisId).text("Invalid Input");
                $("#status-" + thisId).addClass("text-danger");
                $("#status-" + thisId).removeClass("text-success");
            } else if (thisValue > 69) {
                $("#status-" + thisId).text("Pass");
                $("#status-" + thisId).addClass("text-success");
                $("#status-" + thisId).removeClass("text-danger");
            } else {
                $("#status-" + thisId).text("Fail");
                $("#status-" + thisId).addClass("text-danger");
                $("#status-" + thisId).removeClass("text-success");
            }
        });

        
        $("#submit").click(function () {
            let URLAction = '@Url.Action("CreateAttendance", "TrainingPrograms")';
            let attendanceDate = $("#attendance-date-input").val();
            if (attendanceDate == ""){
                $("#error-message").text("Please choose the attendance date");
                $("#attendance-date-input").addClass("border-danger border-4");
                return;
            } else {
                $("#attendance-date-input").removeClass("border-danger border-4");
            }
            let trainingProgramId = @Model.Id;
            let listEmployeeIdWithScore = [];
            $('input:checkbox.check-item-employee').each(function () {
                if (this.checked) {
                    listEmployeeIdWithScore.push({
                        "employeeId": $(this).val(),
                        "score": $("#score-"+$(this).val()).val()
                    });
                }
            });
            $("#attendance-date-input").change(function () {
                if ($(this).val() == "") {
                    $(this).val(new Date().toISOString().slice(0, 10));
                }
            });

            $.ajax({
                url: URLAction,
                type: 'POST',
                data: { TrainingProgramId: trainingProgramId, AttendanceDate: attendanceDate, ListEmployeeIdWithScore: JSON.stringify(listEmployeeIdWithScore) },
                success: function (response) {
                    if (response.statusCode != 200) {
                        $("#error-message").text(response.message);
                    } else {
                        window.location.href = response.redirectToUrl;
                    }

                }
            });
        })
        
        var ImportAttendance = function () {
                     $("#myModal").modal('show');
                }
                                
        var UploadTraining = function () {
                    var formData = new FormData();
                    formData.append("file", $("#inputFile")[0].files[0]);
                    $.ajax({
                          url: "/TrainingPrograms/ImportAttendance",
                          type: "POST",
                          data: formData,
                          processData: false,
                          contentType: false,
                          success: function (response) {
                    $("tr#row").each(function () {
                        var $this = $(this);
                        var code = $this.find('td#code').text().trim();
                        var checked = $this.find('input#check');
                        var score = $this.find('input.score-input');

                        for (var i = 0; i < response.length; i++) {
                            let rcode = response[i].split(":")[0];
                            let rscore = response[i].split(":")[1];

                            if (code === rcode) {
                                checked.prop("checked", true);

                                if (rscore === "#N/A") {
                                    rscore = 0;
                                }

                                score.val(rscore);

                                let thisId = score.attr("id").slice(6);
                                let thisValue = parseFloat(rscore);

                                if (!isNaN(thisValue)) {
                                    if (thisValue > 69) {
                                        $("#status-" + thisId).text("Pass");
                                        $("#status-" + thisId).addClass("text-success");
                                        $("#status-" + thisId).removeClass("text-danger");
                                    } else {
                                        $("#status-" + thisId).text("Fail");
                                        $("#status-" + thisId).addClass("text-danger");
                                        $("#status-" + thisId).removeClass("text-success");
                                    }
                                } else {
                                    $("#status-" + thisId).text("Invalid Input");
                                    $("#status-" + thisId).addClass("text-danger");
                                    $("#status-" + thisId).removeClass("text-success");
                                }

                                break;
                            }
                        }
                    });



                          },
                          error: function (xhr, status, error) {
                              alert(response.responseText);
                          }
                    });
                    
                    $("#myModal").modal('hide');              
                }
                var CloseModal = function () {
                    $("#myModal").modal('hide');
                }
    </script>
}
